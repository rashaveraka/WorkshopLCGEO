
A.Sailer 08/03/2016

  - DDSim: Add enableG4Gun and enableG4GPS flags to enable the Geant4 Gun or GeneralParticleSource
    see examples/gun.mac or examples/gps.mac
    use with ddsim --enablgeG4Gun --macroFile gun.mac  --compactFile ...

 --------
| v00-07 | 
 --------    
  S.Lu
   - added example for a test beam calorimeter:
      - CaloTB/compact/MainTestBeamSetup.xml
      - ./detector/CaloTB/CaloPrototype_v01.cpp
   - run simulation with: 
      ./CaloTB/run_sim/run_sim.sh
 

 --------
| v00-06 | 
 --------    

F.Gaede
 - added detector type flags to xml files for ILD_o1_v05 and Simplified_ILD_o1_v05
 - updated (ILD) geometry constructors to call XML::setDetectorTypeFlag(e,det)
 - fixed thicknesses for surfaces in FTD (FTD_Simple_Staggered_geo.cpp)
 - added surface for Be endplate of VXD shell (VXD04_geo.cpp)
 - added surface for support shell barrel  (VXD04_geo.cpp)
 - fixed layer structure BeamCal08.xml: include graphite in first layer
 - ILD_o1_v05.xml
   - fixed length of B-field
   - fixed z-position of EcalEndcap caloface surface
   - changed calo face layers to be constructed by plugin now

 - added example reconstruction steering file for SiD: ./example/run_sid_reco.xml
 - fixed material for encap helper surfaces 
   ( moved origin away from centerwhich is in the beam pipe)
    -./other/TrackerEndcapSupport_o1_v01.cpp
    -./tracker/TPC10_geo.cpp
    -./tracker/VXD04_geo.cpp
 - added lcgeo.h defining version macros and
   method versionString()
 - renamed DDSimExceptions.h to LcgeoExceptions.h
 - added RunHeader to lcio file in lcio_particle_gun.py
 - added first example implementation of SiDloi3:
    - ./SiD/compact/sidloi3/sidloi3_v00.xml
 - added connical surfaces to beam pipe:
   ./detector/other/Beampipe_o1_v01_geo.cpp
 - added sensitive action CaloPreShowerSDAction
   - creates pre-shower collections for hits from first layer
   - to be used for (ILD) Ecals
 - protect usage of new member variables in LayeredCalorimeterData
   by usage of #if DD4HEP_VERSION_GE( 0, 15 )
   ( added workaround for this to work with ilcsoft v01-17-08/DD4hep v00-14 )
    - ./detector/calorimeter/GenericCalBarrel_o1_v01_geo.cpp
    - ./detector/calorimeter/GenericCalEndcap_o1_v01_geo.cpp
    - ./detector/fcal/BeamCal_o1_v01_geo.cpp
    - ./detector/fcal/LumiCal_o1_v01_geo.cpp

S.Lu
 - ILD_o1_v05.xml
   - Remove unused 'slice' from ILD calorimeters

  - Added two simplified SEcal drivers by removing detail Si wafer structure in the Si layer, which could 
    improve the performance by saving 9.4 s/event in simulation. Todo: thinking about a sensitive driver (segmentation) 
    for virtual cell and virtual gap from guard_ring and so on:
     - ./detector/calorimeter/SEcal04_Barrel_v01.cpp
     - ./detector/calorimeter/SEcal04_Endcaps_v01.cpp
  - ./detector/calorimeter/SEcal04_Barrel.cpp:
    - Added 'Ecal_fiber_thickness' and 'Ecal_Slab_shielding' thickness to the layer placement position. 
    - Update the Ecal wafer placement position 'wafer_pos_z' with correct dimension parameter to work together with 
      'Ecal_guard_ring_size'

  - Remove 'slice' from the following calorimeter drivers
    - ./detector/calorimeter/Yoke05_Barrel.cpp
    - ./detector/calorimeter/Yoke05_Endcaps.cpp
    - ./detector/calorimeter/SHcalSc04_EndcapRing.cpp
    - ./detector/calorimeter/SHcalSc04_Endcaps.cpp
    - ./detector/calorimeter/SHcalSc04_Barrel_v02.cpp
    - ./detector/calorimeter/SHcalSc04_Barrel_v01.cpp
    - ./detector/calorimeter/SHcalSc04_Barrel.cpp




A.Sailer 02/02/2016
-------------------
  - ddsim
    * Add ExtraParticle tables
    * Add flag to define distance for vertexIsNotEndpointOfParent


N.Nikiforou 12/02/2016
----------------------
  - Changed Solenoid_o1_v01_geo.cpp and SCoil02_geo.cpp for proper filling of 
    solenoid extent in the LayeredCalorimeterStructure for use by DDMarlinPandora

N.Nikiforou 11/02/2016
----------------------
  - Fixed errors due to change of namespace of "_toDouble"
  - Added using of "DetType_AUXILIARY" for CLIC_o2_v04  ECalPlug and HCalRing


N.Nikiforou 10/02/2016
----------------------
  - Modified Tracker*_geo.cpp, Vertex*_geo.cpp, ZPlanarTracker_geo.cpp, GenericCal*_geo.cpp  to add setting detector type via xml tag
  - Moved CLIC_o2_v04 to using TrackerEndcap_o1_v04 drivers that set ZPetalDisksData according to minimum/maximum R and average Z
    of all rings in one endcap tracker disk (for DDMarlinPandora)
  - Added "type_flags" tags to all CLIC_o2_v04 subdetector xml files and added include of detector_types.xml

N.Nikiforou 03/02/2016
----------------------
  - Added deprecation warning for GenericSurfaceInstaller plugin which is now part of DD4hep. 
  - Moved CLIC_o2_v04 to using DDhep_GenericSurfaceInstallerPlugin rather than the local lcgeo implementation which is deprecated

A.Sailer 18/01/2016
-------------------
  - ddsim
    * Add RangeCut parameter
    * Add LargestAcceptableStep for magneticField (10*m)

N.Nikiforou 15/12/2015
----------------------
  - Switched CLIC_o2_v04 to using the GenericSurfaceInstaller. Changed therefore to using the following
    includes (notice _02 at the end of the name):
    * Vertex_o2_v04_02.xml
    * InnerTracker_o2_v03_02.xml
    * OuterTracker_o2_v03_02.xml
  - Changed the orientation of the endcap uvn vectors for Vertex and Tracker to 
    u(-1.,0.,0.), v(0.,0.,1.), n(0.,1.,0.), o(0.,0.,0.) using the GenericSurfaceInstaller rather than
    the individual surface installers (for which the orientation of uvn remains as before). The 
    vectors were set using plugin arguments in the xml. The resulting orientation puts v along R
    i.e. the "bad" measurement direction and u along -phi (clockwise). 
  - GenericSurfaceInstaller: by default all u,v,n,o vector components are now set to 0 which means 
    that the user has to define the non-zero components as arguments, otherwise the plugin fails
    
A.Sailer 15/12/2016
-------------------
  - ddsim
    * Add default filter with Edep > 0

N.Nikiforou 10/12/2015
----------------------
  - Added GenericSurfaceInstaller in detector/other to install surfaces to a given
    box-like volume. The u,v,n,o vectors are provided component-wise as arguments to the plugin.
    If the volumes are trapezoids (as in the case of the endcap) the thickness dimension is supposed to be 
    the same for both sides of the trapezoid (for example, dy1=dy2=dy) which is supposed to be handled
    when "casting" the Trapezoid shape into a Box
  - Added InnerTracker_o2_v03_02.xml and OuterTracker_o2_v03_02.xml in CLIC_o2_v04 (not used by default)
    as examples using the new GenericSurfaceInstaller
  
N.Nikiforou 04/12/2015
----------------------
  - Modified CLIC_o2_v04 to use proper convention for listing slices in module composition.
    In this convention, when you list a layer or a slice/component in a module, the top-most
    element in the xml is the component that is closest to the IP (top-most is inner-most).
  - Created new drivers and new xml files to use them
     * TrackerBarrel_o1_v03 and TrackerEndcap_o1_v03 used by Inner/OuterTracker_o2_v03.xml
     * VertexEndcap_o2_v03 used by Vertex_o2_v04_01
  - Created new surface installer plugins copied from DD4hep that follow the convention discussed above
    and used by the new drivers. They are listed below with the u,v,n and origin vectors as defined in 
    the driver coordinate system :
     * TrackerBarrelSurfacePlugin: u(-1.,0.,0.), v(0.,-1.,0.), n(0.,0.,1.), o(0.,0.,0.)
        + Assumes the driver builds the module along the original +z axis, with the top-most slice
          stacked perpendicular to z, closest to (0,0,0) with eventual rotations to place the module
          in the barrel so that the slice is inner-most. This is the case now in TrackerBarrel_o1_v03 
     * TrackerEndcapSurfacePlugin: u(0.,0.,1.), v(1.,0.,0.), n(0.,1.,0.), o(0.,0.,0.);
        + Assumes the driver builds the module along the original +y axis, with the top-most slice
          stacked perpendicular to y, closest to (0,0,0) with eventual rotations to place the module
          in the barrel so that the slice is inner-most. This is the case now in TrackerEndcap_o1_v03 

A.Sailer 30/11/2015
----------------------
  - Added steering of filter to ddsim
    * assign filters to sensitive detectors
    * create your own filters
  - Added dumpSteeringFile option to ddsim
    * prints steeringFile to stdout with current values as default

A.Sailer 23/11/2015
----------------------
 - Added information to the lcio runHeader in ddsim. This needs the DD4hep revision 1984!
   * The steeringFile content, commandline and resulting ddsim parameters are written
   * geant4 and dd4hep version is written directly in dd4hep.
   * user, workingdirectory and date are written as well

A.Sailer 06/10/2015
----------------------
 - ddsim python simulator
 * "ddsim --help" to print all the command line parameters currently available
 * example/steeringFile.py to see an example steering file with some options
 * to enable tab-completion for ddsim: requires bash (or zsh),bash-completion, and python argcomplete
   (e.g. install with: [sudo] pip install argcomplete)
   in the shell run: eval "$(register-python-argcomplete ddsim)"


N.Nikiforou 24/08/2015
----------------------
 - Modified CLIC_o2_v03/ECalBarrel_o2_v01_01.xml, ECalEndcap_02_v01_01.xml and
   ECalPlug_o1_v01_01.xml to avoid having layers without active element
   which complicates implementation for reconstruction.
   This was the case for the last (outermost) dead layer (absorber only).
   Instead, added one more type of layer with only one repeat which includes the extra
   absorber plate
 - Fixed bug (?) in CLIC_o2_v03/ECalEndcap_02_v01_01.xml and ECalPlug_o1_v01_01.xml
   which had different siPCBMix thickness compared to the ECalBarrel (1.20 mm -> 0.80 mm). 


N. Nikiforou 19/08/2015 
-----------------------

   M.Petric
   - Made a new version for CLIC named CLIC_o2_v03 which includes better representations
     of X0 in the Trackers
   N. Nikiforou
   - Added new Generic Calorimeter drivers based on Polyhedra Calorimeters named
     GenericCalBarrel and GenericCalEndcap. The Generic drivers
     were obtained by svn cp from HCalBarrel and HCalEndcap respectively and are used
     in the CLIC_o2_v03 model by the ECal, HCal and Yoke Endcaps, Barrels and Rings.
     These new drivers (almost identical to the old ones) will be used to avoid making 
     changes in all the drivers while developing the reconstruction framework.
     Changes include:
     - Cleaning up of old comments, old code snippets and featurs no longer used (like
       multiple sensitive elements per layer which will not be supported by the reco).
     - Introduction of the new LayeredCalorimeterStruct variables defined in DDRec:
       - inner/outer thicknesses, nRad/nIntLengths and sensitive element thicknesses
     - Avoidance of cloning of element volumes in the barrel case
     - Start of counters (e.g. layer, module, stave, etc) from 0 rather than 1

 --------
| v00-05 | 
 --------    

   N. Nikiforou
   - Added TrackerEndcap_o1_v02_geo.cpp (svn cp'd from TrackerEndcap_o1_v01_geo.cpp) which supports 
     ILD ID encoding and implements ring modules. Elements (enumerated as "sensors") in one ring 
     (constant R) have the same "module" number but different sensor number. 
     Also modified the CLIC_o2_v02 model compact (InnerTracker_o2_v01_01.xml 
     and OuterTracker_o2_v01_01.xml) to use the new driver. Also now implements the "side" bitfield
     side=0 is positive, side=1 is negative. 
   - Introduced new driver VertexEndcap_o1_v02 and necessary changes to compact file for CLIC_o2_v02.
     The new xml also implements double layers in the endcap but with each layer having its own ID. 
     Also, in the new VertexEndcap driver similar changes as above VertexEndcap.


   S.Lu 
   - updated Ecal and Hcal in Share_ILD_o1_CLIC

   T.Quast
   - fixed DetectorData structure for several drivers
     ( as needed for drawing the detector w/ DD4hep in CED )


   M. Petric
   - added CLIC_o2_v02 model w/ simplified Ecal barrel
     ECalBarrel_o2_v01_01.xml in order to set correct W thicknesses

   F.Gaede

   - added TPCSDAction.cpp 
     - ported from Mokka/TPCSD04.cc
   - introduces Geant4 dependency 
      -> to be addressed ...
   - activated in TPC10_geo.cpp
     -> hits should be exactly on pad row centers ...

   - updated ddsim.py :
      - use Geant4ScintillatorCalorimeterAction
        as defaults for all calorimeters
      - use TPCSDAction for TPC 


   A.Sailer
     - Implemented FieldMapBrBz.cpp, based on the 2D Fieldmap of Mokka FieldX03
     - Example XML for the fields section of the compact XML

            <field name="DetectorMap" type="FieldBrBz"
                   filename="${lcgeo_DIR}/fieldmaps/ILDMap_KB_20150204_BRhoZ.root"
               tree="fieldmap:rho:z:Brho:Bz"
               rScale = "1.0"
               zScale = "1.0"
               bScale = "1.0"
               rhoMin = "5*mm"
               zMin = "5*mm"
               rhoMax = "7005*mm"
               zMax = "7005*mm"
               nRho = "701"
               nZ = "701"
               >
            </field>

     - added ./fieldmaps/ILDMap_KB_20150204_BRhoZ.root 
       latest field simulation for ILD by K.Buesser

     - requires BOOST

   N. Nikiforou
     - added  EcalBarrelFace_v00.xml/EcalEndcapFace_v00.xml to CLIC_o2_v01
     - Enabled detailed shower mode for calorimeters by default in ddsim.py/DD4hepSimulation.py

   F.Gaede
     - added PolyhedralBarrelSurfaces_geo.cpp/PolyhedralBarrelSurfaces_geo.cpp
     - to be used for track states at the calorimeters
     - added as EcalBarrelFace_v00.xml/EcalEndcapFace_v00.xml to ILD_o1_v05


 -----------
| v00-04-01 |  - patch release   
 -----------    

   F.Gaede

    - added a new starting point for SDHcal development: ILD_o2_v01
       - based on ILD_o1_v05 as released in (v00-04/ilcsoft v01-17-07)
       - copied SHcalSc04_Barrel_v01.cpp to Hcal_Barrel_SD_v01.cpp
       - copied SHcalSc04_Barrel_v01.xml to Hcal_Barrel_SD_v01.xml

    - removed outdated ILD_o2_v00


     N. Nikiforou
     - Changed CLIC calorimeters to use new isRadiator() helper function and 
       new extended LayeredCalorimeterStruct

 --------
| v00-04 |   ****** renamed to lcgeo ******************
 --------    

     - many changes and developements:

     - first 'complete' prototypes of ILD_o1_v05 
       and CLIC_o2_v01 simulation models

     - introduced envelopes for all sub detector

     - added examples/ddsim.py for running the 
       simulation

     - plugins for adding surfaces to the CLIC model
     - ... 

//======================================================================
 --------
| v00-03 |   third beta release of DDSim
 --------    
       - ...


 --------
| v00-02 |   second beta release of DDSim
 --------    
       M.Frank:  
       - add initial version of DDEve.xml
       - create header file with class XMLHandlerDB

       Sh.Lu:
       - implement EndcapRings for Ecal and Hcal
       - many fixes to calorimter drivers


       A.Sailer:
       - implement 'canonical' SD for creating lcio::SimCalorimeterHits
       	 using the readout/segmentation to compute cellID and position  
       - fixes for BeamCal driver


 --------
| v00-01 |   first beta release of DDSim
 --------    - ILD detector (ported from Mokka ILD_o1_v05) with :
                 VXD, SIT, FTD, SET, TPC,
                 EcalBarrel, HcalBarrel, EcalEndcap, HcalEndcap, EcalRing, beamcal
             - sensitive detectors still experimental
